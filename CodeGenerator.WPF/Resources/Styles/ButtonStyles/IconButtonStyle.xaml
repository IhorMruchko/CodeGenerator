<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:CodeGenerator.WPF.Resources.CustomControllers">

    <Style TargetType="{x:Type local:IconButton}" 
           BasedOn="{StaticResource ResourceKey={x:Type Button}}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Source="{Binding Path=Icon, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:IconButton}}"
                           Height="{Binding Path=Height, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:IconButton}, Converter={StaticResource IconSizeConverter}}"
                           Width="{Binding Path=Width, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:IconButton}, Converter={StaticResource IconSizeConverter}}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:IconButton}">
                    <Border x:Name="ContentContainer"
                            Background="{StaticResource Button.Static.Background}"
                            BorderBrush="Transparent"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True"
                            CornerRadius="{TemplateBinding CornerRadius}">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="True">
                            <Setter Property="BorderBrush"
                                    TargetName="ContentContainer"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" 
                                    TargetName="ContentContainer"
                                    Value="{DynamicResource Button.MouseOver.Background}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background"
                                    TargetName="ContentContainer"
                                    Value="{DynamicResource Button.Pressed.Background}"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background"
                                    TargetName="ContentContainer"
                                    Value="{DynamicResource Button.Disabled.Background}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:DangerButton}" 
           BasedOn="{StaticResource ResourceKey={x:Type Button}}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Source="{Binding Path=Icon, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:IconButton}}"
                           Height="{Binding Path=Height, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:IconButton}, Converter={StaticResource IconSizeConverter}}"
                           Width="{Binding Path=Width, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:IconButton}, Converter={StaticResource IconSizeConverter}}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:IconButton}">
                    <Border x:Name="ContentContainer"
                            Background="{StaticResource Button.Danger.Static.Background}"
                            BorderBrush="Transparent"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True"
                            CornerRadius="{TemplateBinding CornerRadius}">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="True">
                            <Setter Property="BorderBrush"
                                    TargetName="ContentContainer"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" 
                                    TargetName="ContentContainer"
                                    Value="{DynamicResource Button.Danger.MouseOver.Background}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background"
                                    TargetName="ContentContainer"
                                    Value="{DynamicResource Button.Danger.Pressed.Background}"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background"
                                    TargetName="ContentContainer"
                                    Value="{DynamicResource Button.Disabled.Background}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>